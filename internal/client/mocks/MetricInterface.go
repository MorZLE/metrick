// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	storages "github.com/MorZLE/metrick/internal/client/storages"
	mock "github.com/stretchr/testify/mock"
)

// MetricInterface is an autogenerated mock type for the MetricInterface type
type MetricInterface struct {
	mock.Mock
}

// GetMCounter provides a mock function with given fields:
func (_m *MetricInterface) GetMCounter() map[string]int {
	ret := _m.Called()

	var r0 map[string]int
	if rf, ok := ret.Get(0).(func() map[string]int); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]int)
		}
	}

	return r0
}

// GetMGauge provides a mock function with given fields:
func (_m *MetricInterface) GetMGauge() map[string]interface{} {
	ret := _m.Called()

	var r0 map[string]interface{}
	if rf, ok := ret.Get(0).(func() map[string]interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]interface{})
		}
	}

	return r0
}

// UpdateMetric provides a mock function with given fields:
func (_m *MetricInterface) UpdateMetric() *storages.Metric {
	ret := _m.Called()

	var r0 *storages.Metric
	if rf, ok := ret.Get(0).(func() *storages.Metric); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*storages.Metric)
		}
	}

	return r0
}

type mockConstructorTestingTNewMetricInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewMetricInterface creates a new instance of MetricInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMetricInterface(t mockConstructorTestingTNewMetricInterface) *MetricInterface {
	mock := &MetricInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
